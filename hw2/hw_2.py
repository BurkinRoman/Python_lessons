# Задача 1
# На столе лежат n монеток. Некоторые из монеток лежат вверх решкой, а некоторые – гербом. Ваша задача - определить минимальное количество монеток, которые нужно перевернуть, чтобы все монетки лежали одной и той же стороной вверх.

# Входные данные:
# На вход программе подается список coins, где coins[i] равно 0, если i-я монетка лежит гербом вверх, и равно 1, если i-я монетка лежит решкой вверх. Размер списка не превышает 1000 элементов.
# Выходные данные:
# Программа должна вывести одно целое число - минимальное количество монеток, которые нужно перевернуть.

# coins = [0, 1, 0, 1, 1, 0, 0, 0, 0, 0]
# min = 0
# for coin in coins:
#     if(coin == 0):
#         min += 1
# if (len(coins) // 2  < min):
#     min = len(coins) - min
# print (min)


# Задача 2
# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.
# Примечание: числа S и P задавать не нужно, они будут передаваться в тестах. В результате вы должны вывести все возможные пары чисел X и Y через пробел, такие что X <= Y.

s = int(input("Введите сумму чисел: "))
p = int(input("Введите произведение чисел: "))

possible_pairs = []
for x in range(1, (s//2+1)):
    if p % x == 0:
        y = p // x
        if x + y == s:
            possible_pairs.append(x)
            possible_pairs.append(y)
print(*possible_pairs, sep = " ")
# print(possible_pairs)

# Задача 3
# Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числаN.

n = int(input("Введите целое число: "))
i = 0
while 2 ** i <= n:
    print(2 ** i)
    i += 1



